---
- name: "[Play 1] Provision RHEL8 instances in AWS"
  hosts: localhost
  connection: local
  gather_facts: False

  # load AWS variables from this group vars file
  vars_files:
  - group_vars/aws


  tasks:
  - name: Create securitygroup "{{ ec2_security_group }}" that allows SSH & Cockpit
    ec2_group:
      name: "{{ ec2_security_group }}"
      description: Demo security group
      region: "{{ ec2_region }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key}}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 9090
          to_port: 9090
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0

  - name: Create ec2 instances
    ec2_instance:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      key_name: "{{ ec2_keypair }}"
      name: "{{ vm_prefix }}{{ item }}"
      instance_type: "{{ ec2_instance_type }}"
      region: "{{ ec2_region }}"
      security_groups: "{{ ec2_security_group }}"
      validate_certs: yes
      image_id: "{{ ec2_image }}"
    register: vmcreate
    async: 1200 # 20 minutes until timeout
    poll: 0 # run concurrently
    with_sequence: start=1 end={{num_vm|int}}

  - name: Wait for instance creation to complete
    async_status: jid={{ item.ansible_job_id }}
    register: ec2_jobs
    until: ec2_jobs.finished
    retries: 300
    with_items: "{{ vmcreate.results }}"
    ignore_errors: true

  - name: Create a dictionary of all of the server names and their instance_ids
    set_fact:
     server_names: "{{ (server_names | default({})) | combine({ vmcreate.item.public_dns_name: vmcreate.item.instance_ids[0] }) }}"
    loop: "{{ ec2_jobs.results }}"
    loop_control:
      loop_var: ec2_instance

  - name: Setup in-memory inventory
    add_host:
      hostname: "{{ item.public_dns_name }}"
      groups: just_created_vms
    with_items: "{{ ec2_jobs }}"

- name: "[Play 2] Post Configuration of VM"
  hosts: just_created_vms
  become: true
  vars:
    ansible_python_interpreter: /usr/libexec/platform-python

  tasks:
    - include_role:
        name: ansible-role-rhsm

    - include_role:
        name: redhatinsights.insights-client
      vars:
        insights_display_name: "{{ ansible_hostname }}"

    - include_role:
        name: ansible-role-openscap
