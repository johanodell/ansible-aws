---
- name: "[Play 1] Provision RHEL8 instances in AWS"
  hosts: localhost
  connection: local
  gather_facts: False

  # load AWS variables from this group vars file
  vars_files:
  - group_vars/aws

  tasks:
  - name: Create securitygroup "{{ ec2_security_group }}" which allows ssh and cockpit traffic
    ec2_group:
      name: "{{ ec2_security_group }}"
      description: Demo security group
      region: "{{ ec2_region }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 9090
          to_port: 9090
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0

  - name: Launch instances
    ec2:
      access_key: "{{ ec2_access_key }}"
      secret_key: "{{ ec2_secret_key }}"
      keypair: "{{ ec2_keypair }}"
      group: "{{ ec2_security_group }}"
      type: "{{ ec2_instance_type }}"
      image: "{{ ec2_image }}"
      region: "{{ ec2_region }}"
      instance_tags: "{'ansible_group':'rheldemo', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'rheldemo'}"
      count: "{{ ec2_instance_count }}"
      wait: true
    register: ec2

  - name: Wait for SSH to come up
    wait_for:
      host: "{{ item.public_dns_name }}"
      port: 22
      delay: 60
      timeout: 320
      state: started
    with_items: "{{ ec2.instances }}"

  - name: Setup in-memory inventory
    add_host:
      name: "{{ item.public_dns_name }}"
      groups:
        - tag_ansible_group_app
    with_items: "{{ ec2.instances }}"

- name: "[Play 2] Post Configuration of VM"
  hosts: tag_ansible_group_app
  become: true
  vars:
    ansible_python_interpreter: /usr/libexec/platform-python
   # rhel_cloud_postconf_rhsm_username: "{{ rhsm_username }}"
   # rhel_cloud_postconf_rhsm_password: "{{ rhsm_password }}"
   # rhel_cloud_postconf_rhsm_pool_id: "{{ rhsm_pool_id }}"

  tasks:
    - name: Set hostname for system
      hostname:
        name: "{{ 'aws' + '-' + ansible_hostname }}"

    - include_role:
        name: ansible-role-rhsm

    - include_role:
        name: redhatinsights.insights-client

    - include_role:
        name: ansible-role-openscap

